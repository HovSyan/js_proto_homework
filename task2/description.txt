/* Some utility functions with prototype */

Implement this functions.
1. A function that get an object as a parameter and returns an array of
strings representing its prototype chain classes.

Example.
let d = new Date();
getProtoChain(d)    // ["Date", "Object"]

2. Write a function that get two objects obj1 and obj2, and sets the obj1's
prototype obj2 and obj2's prototype obj1. So all properties will be available in obj1
and obj2.

Example.
setProtosToEachOther(o1, o2)

3. Suppose you have classes/functions A and B, so that A extends B. You need to write a function
that gets third class/function C and puts that in this way.
A extends C, C extends B.

Example.
innerExtend(A, B, C);
